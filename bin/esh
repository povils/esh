#!/usr/bin/env ruby

require 'rubygems'
require 'commander'
require 'structural'
require 'tty-spinner'
require_relative '../lib/repository/aws_target_repository.rb'
require_relative '../lib/ssh/executer.rb'
require_relative '../lib/input/argument.rb'
require_relative '../lib/esh.rb'
require_relative '../lib/command/all.rb'
require_relative '../lib/services/all.rb'

class Application
  include Commander::Methods

  def run
    program :name, 'esh'
    program :version, '0.0.1'
    program :description, 'SSH for AWS EC2'
    default_command :run

    command :run do |c|
      c.syntax = 'esh ec2-server-name'
      c.description = 'Default command for SSH'
      c.action do |args, options|
        argument = Argument.new(args.first)

        p TargetService.new(argument).target

      end
    end

    command :ls do |c|
      c.syntax = 'esh ls'
      c.description = 'list all destinations'
      c.action do |args, options|
        spinner = TTY::Spinner.new("[:spinner] Fetching ...", format: :pulse_2, clear: true)
        spinner.auto_spin
        esh = Esh.new
        if args.first
          search = args.first
        else
          search = ''
        end

        table = esh.list(search)
        spinner.stop
        puts table
      end
    end

    command :configure do |c|
      c.syntax = 'esh configure'
      c.option "--profile NAME", String, 'Profile name'
      c.description = 'configure'
      c.action do |args, options|
        options.default  :profile => 'default'

        $stdout.print "region: "
        region = $stdin.gets.chomp
        $stdout.print "user: "
        user = $stdin.gets.chomp

        Command::Configure.new(options.profile, user, region).execute
      end
    end

    command :use do |c|
      c.syntax = "esh use profile_name"
      c.action do |args, options|
        Command::Use.new(args.first).execute
      end
    end

    run!
  end
end

Application.new.run if $0 == __FILE__
